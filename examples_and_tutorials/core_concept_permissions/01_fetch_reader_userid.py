import asyncio
import os
from nillion_client.payer import DummyPayer
import pytest
import hashlib

from nillion_client import (
    Network,
    VmClient,
    PrivateKey,
)
from dotenv import load_dotenv

home = os.getenv("HOME")
load_dotenv(f"{home}/.config/nillion/nillion-devnet.env")


async def main():
    # Use the devnet configuration generated by `nillion-devnet`
    network = Network.from_config("devnet")

    # Construct a private key from a known seed.
    raw_private_key = hashlib.sha256(b"seed_1").digest()
    signing_key = PrivateKey(raw_private_key)

    # Create a dummy payer. Since we won't make payments here we don't need to setup a fully baked payer.
    payer = DummyPayer()

    client = await VmClient.create(signing_key, network, payer)

    # Get the reader's user id
    reader_user_id = client.user_id

    print(f"‚ÑπÔ∏è Fetched the reader's USER ID: {reader_user_id}")
    print(
        "\n\nRun the following command to store a secret and give read/retrieve permissions to the READER USER ID"
    )
    print(
        f"\nüìã python3 02_store_permissioned_secret.py --retriever_user_id {reader_user_id}"
    )
    return reader_user_id


if __name__ == "__main__":
    asyncio.run(main())


@pytest.mark.asyncio
async def test_main():
    pass
